import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        file: "redisadapter.h"
        name: "RedisAdapter"
        prototype: "QObject"
        exports: ["io.junsie.mredis/RedisAdapter 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "redis"; type: "QList<RedisMeta*>" }
        Signal {
            name: "redisLost"
            Parameter { name: "meta"; type: "RedisMeta"; isPointer: true }
        }
        Signal {
            name: "netError"
            Parameter { name: "meta"; type: "RedisMeta"; isPointer: true }
        }
        Signal { name: "updateDevice" }
        Signal {
            name: "notifyDbKn"
            Parameter { name: "dbInx"; type: "int" }
            Parameter { name: "n"; type: "int" }
        }
        Signal {
            name: "notifyDbKeys"
            Parameter { name: "dbInx"; type: "int" }
        }
        Signal {
            name: "readTimeout"
            Parameter { name: "com"; type: "string" }
        }
        Method {
            name: "setRedis"
            Parameter { name: "list"; type: "QList<RedisMeta*>&" }
        }
        Method { name: "getRedis"; type: "QList<RedisMeta*>" }
        Method {
            name: "validateJson"
            type: "string"
            Parameter { name: "str"; type: "string" }
        }
        Method {
            name: "formatJson"
            type: "string"
            Parameter { name: "str"; type: "string" }
        }
        Method {
            name: "setHigher"
            Parameter { name: "doc"; type: "QQuickTextDocument"; isPointer: true }
        }
        Method {
            name: "newRedis"
            type: "string"
            Parameter { name: "meta"; type: "RedisMeta"; isPointer: true }
        }
        Method {
            name: "testRedis"
            type: "bool"
            Parameter { name: "meta"; type: "RedisMeta"; isPointer: true }
        }
        Method {
            name: "delRedis"
            Parameter { name: "inx"; type: "int" }
        }
        Method {
            name: "auth"
            Parameter { name: "inx"; type: "int" }
        }
        Method {
            name: "queryConfig"
            Parameter { name: "inx"; type: "int" }
        }
        Method {
            name: "queryDbs"
            type: "int"
            Parameter { name: "inx"; type: "int" }
        }
        Method {
            name: "queryDbsN"
            type: "int"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
        }
        Method {
            name: "dbkeys"
            type: "QList<QString>"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
        }
        Method {
            name: "typeKey"
            type: "string"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "getKv"
            type: "string"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "setKv"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "getHKeys"
            type: "QList<QString>"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "mat"; type: "string" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "getHKv"
            type: "string"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "getHKn"
            type: "int"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
        }
        Method {
            name: "getSKn"
            type: "int"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "getSKeys"
            type: "QList<QString>"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "mat"; type: "string" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "getLKeys"
            type: "QList<QString>"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "stop"; type: "int" }
        }
        Method {
            name: "getLKn"
            type: "int"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "setStringKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setHashKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setSetKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "setListKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "linx"; type: "int" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "pushListKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "value"; type: "string" }
            Parameter { name: "pat"; type: "string" }
        }
        Method {
            name: "insertListKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "target"; type: "string" }
            Parameter { name: "value"; type: "string" }
            Parameter { name: "pat"; type: "string" }
        }
        Method {
            name: "delKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "delHashKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "delSetKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "delListKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "remKey"
            type: "bool"
            Parameter { name: "inx"; type: "int" }
            Parameter { name: "db"; type: "int" }
            Parameter { name: "oldkey"; type: "string" }
            Parameter { name: "newkey"; type: "string" }
        }
    }
    Component {
        file: "redisadapter.h"
        name: "RedisMeta"
        prototype: "QObject"
        exports: ["io.junsie.mredis/RedisMeta 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "name"; type: "string" }
        Property { name: "host"; type: "string" }
        Property { name: "port"; type: "string" }
        Property { name: "pass"; type: "string" }
        Property { name: "uuid"; type: "string" }
        Signal {
            name: "notifyDbKn"
            Parameter { name: "i"; type: "int" }
            Parameter { name: "n"; type: "int" }
        }
        Signal {
            name: "notifyDbKeys"
            Parameter { name: "dbInx"; type: "int" }
        }
        Signal {
            name: "systemError"
            Parameter { name: "com"; type: "string" }
        }
        Signal {
            name: "readTimeout"
            Parameter { name: "com"; type: "string" }
        }
        Method { name: "connectHost"; type: "bool" }
        Method { name: "auth"; type: "bool" }
        Method { name: "queryConfig" }
        Method { name: "queryDbs"; type: "int" }
        Method {
            name: "queryDbsN"
            type: "int"
            Parameter { name: "db"; type: "int" }
        }
        Method {
            name: "getDbKeys"
            type: "QList<QString>"
            Parameter { name: "db"; type: "int" }
        }
        Method {
            name: "typeKey"
            type: "string"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "getKv"
            type: "string"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "getHKeys"
            type: "QList<QString>"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "mat"; type: "string" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "getHKv"
            type: "string"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "getHKn"
            type: "int"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
        }
        Method {
            name: "getSKeys"
            type: "QList<QString>"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "mat"; type: "string" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Method {
            name: "getSKn"
            type: "int"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "getLKeys"
            type: "QList<QString>"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "stop"; type: "int" }
        }
        Method {
            name: "getLKn"
            type: "int"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "setStringKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setHashKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "setSetKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "setListKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "linx"; type: "int" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "pushListKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "value"; type: "string" }
            Parameter { name: "pat"; type: "string" }
        }
        Method {
            name: "insertListKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "target"; type: "string" }
            Parameter { name: "value"; type: "string" }
            Parameter { name: "pat"; type: "string" }
        }
        Method {
            name: "delKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "delHashKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "delSetKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "delListKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "table"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "remKey"
            type: "bool"
            Parameter { name: "db"; type: "int" }
            Parameter { name: "oldkey"; type: "string" }
            Parameter { name: "newkey"; type: "string" }
        }
    }
}
